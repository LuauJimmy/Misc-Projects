<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>